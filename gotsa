[33mcommit a74531b274157a49c353a7f1c422a416180e1032[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m, [m[1;31morigin/master[m[33m, [m[1;31morigin/HEAD[m[33m)[m
Author: sipesino <richardpesino@gmail.com>
Date:   Fri Mar 25 05:18:50 2022 +0800

    Fixed push notification implementation

[1mdiff --git a/lib/firebase_options.dart b/lib/firebase_options.dart[m
[1mnew file mode 100644[m
[1mindex 0000000..b205415[m
[1m--- /dev/null[m
[1m+++ b/lib/firebase_options.dart[m
[36m@@ -0,0 +1,53 @@[m
[32m+[m[32m// File generated by FlutterFire CLI.[m
[32m+[m[32m// ignore_for_file: lines_longer_than_80_chars[m
[32m+[m[32mimport 'package:firebase_core/firebase_core.dart' show FirebaseOptions;[m
[32m+[m[32mimport 'package:flutter/foundation.dart'[m
[32m+[m[32m    show defaultTargetPlatform, kIsWeb, TargetPlatform;[m
[32m+[m
[32m+[m[32m/// Default [FirebaseOptions] for use with your Firebase apps.[m
[32m+[m[32m///[m
[32m+[m[32m/// Example:[m
[32m+[m[32m/// ```dart[m
[32m+[m[32m/// import 'firebase_options.dart';[m
[32m+[m[32m/// // ...[m
[32m+[m[32m/// await Firebase.initializeApp([m
[32m+[m[32m///   options: DefaultFirebaseOptions.currentPlatform,[m
[32m+[m[32m/// );[m
[32m+[m[32m/// ```[m
[32m+[m[32mclass DefaultFirebaseOptions {[m
[32m+[m[32m  static FirebaseOptions get currentPlatform {[m
[32m+[m[32m    if (kIsWeb) {[m
[32m+[m[32m      throw UnsupportedError([m
[32m+[m[32m        'DefaultFirebaseOptions have not been configured for web - '[m
[32m+[m[32m        'you can reconfigure this by running the FlutterFire CLI again.',[m
[32m+[m[32m      );[m
[32m+[m[32m    }[m
[32m+[m[32m    // ignore: missing_enum_constant_in_switch[m
[32m+[m[32m    switch (defaultTargetPlatform) {[m
[32m+[m[32m      case TargetPlatform.android:[m
[32m+[m[32m        return android;[m
[32m+[m[32m      case TargetPlatform.iOS:[m
[32m+[m[32m        throw UnsupportedError([m
[32m+[m[32m          'DefaultFirebaseOptions have not been configured for ios - '[m
[32m+[m[32m          'you can reconfigure this by running the FlutterFire CLI again.',[m
[32m+[m[32m        );[m
[32m+[m[32m      case TargetPlatform.macOS:[m
[32m+[m[32m        throw UnsupportedError([m
[32m+[m[32m          'DefaultFirebaseOptions have not been configured for macos - '[m
[32m+[m[32m          'you can reconfigure this by running the FlutterFire CLI again.',[m
[32m+[m[32m        );[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    throw UnsupportedError([m
[32m+[m[32m      'DefaultFirebaseOptions are not supported for this platform.',[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  static const FirebaseOptions android = FirebaseOptions([m
[32m+[m[32m    apiKey: 'AIzaSyBWrHIPUo0-6zykEWxiWeS79VhzJ1Cb18c',[m
[32m+[m[32m    appId: '1:1079593252014:android:b54a1608e64d773b62e93f',[m
[32m+[m[32m    messagingSenderId: '1079593252014',[m
[32m+[m[32m    projectId: 'pasacao-ers',[m
[32m+[m[32m    storageBucket: 'pasacao-ers.appspot.com',[m
[32m+[m[32m  );[m
[32m+[m[32m}[m
[1mdiff --git a/lib/main.dart b/lib/main.dart[m
[1mindex 75bc024..24f3c13 100644[m
[1m--- a/lib/main.dart[m
[1m+++ b/lib/main.dart[m
[36m@@ -1,4 +1,5 @@[m
 import 'package:firebase_core/firebase_core.dart';[m
[32m+[m[32mimport 'firebase_options.dart';[m
 import 'package:firebase_messaging/firebase_messaging.dart';[m
 import 'package:flutter/material.dart';[m
 import 'package:flutter_local_notifications/flutter_local_notifications.dart';[m
[36m@@ -38,41 +39,46 @@[m [mfinal FlutterLocalNotificationsPlugin flutterLocalNotificationsPlugin =[m
     FlutterLocalNotificationsPlugin();[m
 [m
 Future<void> _firebaseMessagingBackgroundHandler(RemoteMessage message) async {[m
[32m+[m[32m  // If you're going to use other Firebase services in the background, such as Firestore,[m
[32m+[m[32m  // make sure you call `initializeApp` before using other Firebase services.[m
   await Firebase.initializeApp();[m
[31m-  print('A bg message just showed up :  ${message.messageId}');[m
[32m+[m
[32m+[m[32m  print("Handling a background message: ${message.messageId}");[m
 }[m
 [m
 void main() async {[m
   WidgetsFlutterBinding.ensureInitialized();[m
[32m+[m
   SharedPref prefs = SharedPref();[m
   String data = await prefs.read('user');[m
   User? user;[m
[31m-[m
   if (data != 'null') user = User.fromJson(await data);[m
[31m-[m
   Paint.enableDithering = true;[m
[31m-  await Firebase.initializeApp();[m
[32m+[m[32m  await Firebase.initializeApp([m
[32m+[m[32m    options: DefaultFirebaseOptions.currentPlatform,[m
[32m+[m[32m  );[m
 [m
[31m-  FirebaseMessaging.onBackgroundMessage(_firebaseMessagingBackgroundHandler);[m
[32m+[m[32m  var token = await FirebaseMessaging.instance.getToken();[m
[32m+[m[32m  print('token: $token');[m
 [m
[31m-  await flutterLocalNotificationsPlugin[m
[31m-      .resolvePlatformSpecificImplementation<[m
[31m-          AndroidFlutterLocalNotificationsPlugin>()[m
[31m-      ?.createNotificationChannel(channel);[m
[32m+[m[32m  FirebaseMessaging messaging = FirebaseMessaging.instance;[m
 [m
[31m-  await FirebaseMessaging.instance.setForegroundNotificationPresentationOptions([m
[32m+[m[32m  NotificationSettings settings = await messaging.requestPermission([m
     alert: true,[m
[32m+[m[32m    announcement: false,[m
     badge: true,[m
[32m+[m[32m    carPlay: false,[m
[32m+[m[32m    criticalAlert: false,[m
[32m+[m[32m    provisional: false,[m
     sound: true,[m
   );[m
 [m
[31m-  var token = await FirebaseMessaging.instance.getToken();[m
[31m-[m
[31m-  print('token: $token');[m
[32m+[m[32m  print('User granted permission: ${settings.authorizationStatus}');[m
 [m
   FirebaseMessaging.onMessage.listen((RemoteMessage message) {[m
     RemoteNotification notification = message.notification!;[m
     AndroidNotification? android = message.notification?.android;[m
[32m+[m
     if (notification != null && android != null) {[m
       flutterLocalNotificationsPlugin.show([m
         notification.hashCode,[m
[36m@@ -108,7 +114,6 @@[m [mclass _MERSState extends State<MERS> {[m
   @override[m
   void initState() {[m
     super.initState();[m
[31m-[m
     PermissionHandler.checkPermissions();[m
   }[m
 [m
